/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BSPC    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
&kp TAB          &ht N1 Q          &ht N2 W      &ht N3 F             &ht N4 P            &ht N5 D                          &ht N6 J         &ht N7 L         &ht N8 U                &ht N9 Y                 &ht N0 SEMICOLON  &kp BSPC
&ht LG(TAB) TAB  &ht AT_SIGN A     &ht HASH R    &ht QUESTION S       &ht EXCL T          &ht KP_MINUS G                    &ht KP_PLUS H    &ht KP_EQUAL N   &ht LEFT_PARENTHESIS E  &ht RIGHT_PARENTHESIS I  &ht PERCENT O     &kp SQT
&kp LEFT_GUI     &ht UNDERSCORE Z  &ht DOLLAR X  &ht DOUBLE_QUOTES C  &ht SINGLE_QUOTE V  &ht COLON B                       &ht SEMICOLON K  &ht SLASH M      &kp COMMA               &kp DOT                  &kp FSLH          &mo 3
                                                 &mo 2                &lt 1 SPACE                         &kp LEFT_CONTROL                   &kp RIGHT_SHIFT  &kp RGUI
            >;
        };

        Numpad {
            // ------------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |       ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(SPACE) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
&kp K_MUTE         &kp PAGE_UP    &kp TILDE           &kp UP_ARROW    &kp DLLR             &kp PRCNT             &kp KP_DIVIDE    &ht F8 KP_N7  &ht F8 KP_N8  &ht F9 KP_N9  &kp KP_SUBTRACT  &kp BACKSPACE
&kp C_VOLUME_UP    &kp TAB        &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp KP_EQUAL          &kp KP_ASTERISK  &ht F4 KP_N4  &ht F5 KP_N5  &ht F6 KP_N6  &kp KP_PLUS      &kp DELETE
&kp C_VOLUME_DOWN  &kp PAGE_DOWN  &kp RG(LEFT_ARROW)  &kp RG(RS(S))   &kp LG(RIGHT_ARROW)  &kp HASH              &kp KP_N0        &ht F1 KP_N1  &ht F2 KP_N2  &ht F3 KP_N3  &kp PERIOD       &trans
                                                      &trans          &trans                             &trans                   &kp ENTER     &trans
            >;
        };

        raise_layer {
            // ----------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BSPC |    |     |

            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4            &kp F5                       &kp F6          &kp F7           &kp F8  &kp F9  &kp F10  &kp DEL
&trans  &trans  &trans  &trans  &trans            &trans                       &trans          &trans           &trans  &trans  &trans   &trans
&trans  &trans  &trans  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET            &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans  &trans  &trans   &trans
                        &trans  &mo 3                                &kp BSPC                  &trans           &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
&rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &none              &rgb_ug RGB_TOG           &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bt BT_CLR_ALL
&rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR  &ext_power EP_OFF  &ext_power EP_ON          &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_CLR
&none            &none            &none            &none            &none              &sys_reset                &sys_reset     &none          &none          &none          &none          &none
                                                   &trans           &trans                               &tog 3                 &trans         &trans
            >;
        };
    };
};
